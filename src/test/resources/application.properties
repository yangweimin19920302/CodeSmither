#数据库源（c3p0-config.xml 中配置）
codesmither.database.config.name = spring_boot

#数据库表通用前缀，后缀，分隔符（配置有效之后生成的类名会舍去前缀和后缀，根据分隔符形成骆驼峰）
codesmither.database.table.prefix = t_
codesmither.database.table.suffix = .
codesmither.database.table.division = _

#数据库列通用前缀，后缀，分隔符（配置有效之后生成的字段会舍去前缀和后缀，根据分隔符形成骆驼峰）
codesmither.database.column.prefix = t_
codesmither.database.column.suffix = .
codesmither.database.column.division = _

#模板路劲配置 目前有三种 通用Model、整合dbutil和mybatis的SpringMVC （可以自制模板并用绝对路径指定如 D:/template）
#codesmither.template.path = templates/data-model
#codesmither.template.path = templates/data-dictionary
#codesmither.template.path = templates/spring-mvc-mybatis
codesmither.template.path = templates/spring-boot
#模板使用的编程语言
#codesmither.template.lang = CSharp
codesmither.template.lang = java
#模板文件采用的编码
codesmither.template.charset = UTF-8
#配置包含的文件和文件夹
codesmither.template.include.file =  *.*;${className}Mapper.java.ftl;${className}.java.ftl;
codesmither.template.include.path = *
#配置排除的文件和文件夹
codesmither.template.filter.file = *.class;*.jar;regex:^\\..*
codesmither.template.filter.path = bin;gen;libs;assets;res;regex:^\\..*


#设置生成项目路劲 可以用相对路径和绝对路劲
codesmither.target.path = ../spring_boot
#生成项目的编码
#codesmither.target.charset = GBK
codesmither.target.charset = UTF-8
#生成的项目名称
codesmither.target.project.name = spring_boot
#生成的项目作者
codesmither.target.project.author = yangweimin
#生成的项目包名
codesmither.target.project.packagename = com.cloudpioneer.analysis
